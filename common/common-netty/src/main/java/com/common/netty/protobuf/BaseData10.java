// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseData10.proto

package com.common.netty.protobuf;

public final class BaseData10 {
  private BaseData10() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface A110OrBuilder extends
      // @@protoc_insertion_point(interface_extends:A110)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required int32 parking_id = 2;</code>
     */
    boolean hasParkingId();
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required int32 parking_id = 2;</code>
     */
    int getParkingId();

    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string clientSerial = 3;</code>
     */
    boolean hasClientSerial();
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string clientSerial = 3;</code>
     */
    String getClientSerial();
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string clientSerial = 3;</code>
     */
    com.google.protobuf.ByteString
        getClientSerialBytes();

    /**
     * <pre>
     *通道编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    boolean hasWayNo();
    /**
     * <pre>
     *通道编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    int getWayNo();

    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    boolean hasWayName();
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    String getWayName();
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    com.google.protobuf.ByteString
        getWayNameBytes();

    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    boolean hasLicense();
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    String getLicense();
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    com.google.protobuf.ByteString
        getLicenseBytes();

    /**
     * <pre>
     *入场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    boolean hasInTime();
    /**
     * <pre>
     *入场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    String getInTime();
    /**
     * <pre>
     *入场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    com.google.protobuf.ByteString
        getInTimeBytes();

    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 8;</code>
     */
    boolean hasCarClass();
    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 8;</code>
     */
    int getCarClass();

    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    boolean hasCarType();
    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    int getCarType();

    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalBerthCount = 10;</code>
     */
    boolean hasTotalBerthCount();
    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalBerthCount = 10;</code>
     */
    int getTotalBerthCount();

    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emptyBerthCount = 11;</code>
     */
    boolean hasEmptyBerthCount();
    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emptyBerthCount = 11;</code>
     */
    int getEmptyBerthCount();

    /**
     * <pre>
     *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
     * </pre>
     *
     * <code>required int32 inOpen = 12;</code>
     */
    boolean hasInOpen();
    /**
     * <pre>
     *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
     * </pre>
     *
     * <code>required int32 inOpen = 12;</code>
     */
    int getInOpen();

    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>required string openSerial = 13;</code>
     */
    boolean hasOpenSerial();
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>required string openSerial = 13;</code>
     */
    String getOpenSerial();
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>required string openSerial = 13;</code>
     */
    com.google.protobuf.ByteString
        getOpenSerialBytes();
  }
  /**
   * <pre>
   *核心业务指令-进场汇报指令-请求对象
   * </pre>
   *
   * Protobuf type {@code A110}
   */
  public  static final class A110 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:A110)
      A110OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use A110.newBuilder() to construct.
    private A110(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private A110() {
      parkingId_ = 0;
      clientSerial_ = "";
      wayNo_ = 0;
      wayName_ = "";
      license_ = "";
      inTime_ = "";
      carClass_ = 0;
      carType_ = 0;
      totalBerthCount_ = 0;
      emptyBerthCount_ = 0;
      inOpen_ = 0;
      openSerial_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private A110(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              parkingId_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              clientSerial_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              wayNo_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              wayName_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              license_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              inTime_ = bs;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              carClass_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              carType_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              totalBerthCount_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              emptyBerthCount_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              inOpen_ = input.readInt32();
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              openSerial_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BaseData10.internal_static_A110_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BaseData10.internal_static_A110_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              A110.class, Builder.class);
    }

    private int bitField0_;
    public static final int PARKING_ID_FIELD_NUMBER = 2;
    private int parkingId_;
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required int32 parking_id = 2;</code>
     */
    public boolean hasParkingId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *停车场编号
     * </pre>
     *
     * <code>required int32 parking_id = 2;</code>
     */
    public int getParkingId() {
      return parkingId_;
    }

    public static final int CLIENTSERIAL_FIELD_NUMBER = 3;
    private volatile Object clientSerial_;
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string clientSerial = 3;</code>
     */
    public boolean hasClientSerial() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string clientSerial = 3;</code>
     */
    public String getClientSerial() {
      Object ref = clientSerial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string clientSerial = 3;</code>
     */
    public com.google.protobuf.ByteString
        getClientSerialBytes() {
      Object ref = clientSerial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        clientSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WAYNO_FIELD_NUMBER = 4;
    private int wayNo_;
    /**
     * <pre>
     *通道编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    public boolean hasWayNo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *通道编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    public int getWayNo() {
      return wayNo_;
    }

    public static final int WAYNAME_FIELD_NUMBER = 5;
    private volatile Object wayName_;
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    public boolean hasWayName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    public String getWayName() {
      Object ref = wayName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wayName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *通道名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getWayNameBytes() {
      Object ref = wayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        wayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LICENSE_FIELD_NUMBER = 6;
    private volatile Object license_;
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    public boolean hasLicense() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    public String getLicense() {
      Object ref = license_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          license_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    public com.google.protobuf.ByteString
        getLicenseBytes() {
      Object ref = license_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        license_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTIME_FIELD_NUMBER = 7;
    private volatile Object inTime_;
    /**
     * <pre>
     *入场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    public boolean hasInTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *入场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    public String getInTime() {
      Object ref = inTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *入场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    public com.google.protobuf.ByteString
        getInTimeBytes() {
      Object ref = inTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        inTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CARCLASS_FIELD_NUMBER = 8;
    private int carClass_;
    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 8;</code>
     */
    public boolean hasCarClass() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 8;</code>
     */
    public int getCarClass() {
      return carClass_;
    }

    public static final int CARTYPE_FIELD_NUMBER = 9;
    private int carType_;
    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    public boolean hasCarType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 9;</code>
     */
    public int getCarType() {
      return carType_;
    }

    public static final int TOTALBERTHCOUNT_FIELD_NUMBER = 10;
    private int totalBerthCount_;
    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalBerthCount = 10;</code>
     */
    public boolean hasTotalBerthCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalBerthCount = 10;</code>
     */
    public int getTotalBerthCount() {
      return totalBerthCount_;
    }

    public static final int EMPTYBERTHCOUNT_FIELD_NUMBER = 11;
    private int emptyBerthCount_;
    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emptyBerthCount = 11;</code>
     */
    public boolean hasEmptyBerthCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emptyBerthCount = 11;</code>
     */
    public int getEmptyBerthCount() {
      return emptyBerthCount_;
    }

    public static final int INOPEN_FIELD_NUMBER = 12;
    private int inOpen_;
    /**
     * <pre>
     *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
     * </pre>
     *
     * <code>required int32 inOpen = 12;</code>
     */
    public boolean hasInOpen() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
     * </pre>
     *
     * <code>required int32 inOpen = 12;</code>
     */
    public int getInOpen() {
      return inOpen_;
    }

    public static final int OPENSERIAL_FIELD_NUMBER = 13;
    private volatile Object openSerial_;
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>required string openSerial = 13;</code>
     */
    public boolean hasOpenSerial() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>required string openSerial = 13;</code>
     */
    public String getOpenSerial() {
      Object ref = openSerial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          openSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>required string openSerial = 13;</code>
     */
    public com.google.protobuf.ByteString
        getOpenSerialBytes() {
      Object ref = openSerial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        openSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasParkingId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWayNo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWayName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLicense()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCarClass()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalBerthCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEmptyBerthCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInOpen()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOpenSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, parkingId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, clientSerial_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, wayNo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, wayName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, license_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, inTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, carClass_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, carType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, totalBerthCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, emptyBerthCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, inOpen_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, openSerial_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, parkingId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, clientSerial_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, wayNo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, wayName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, license_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, inTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, carClass_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, carType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, totalBerthCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, emptyBerthCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, inOpen_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, openSerial_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof A110)) {
        return super.equals(obj);
      }
      A110 other = (A110) obj;

      boolean result = true;
      result = result && (hasParkingId() == other.hasParkingId());
      if (hasParkingId()) {
        result = result && (getParkingId()
            == other.getParkingId());
      }
      result = result && (hasClientSerial() == other.hasClientSerial());
      if (hasClientSerial()) {
        result = result && getClientSerial()
            .equals(other.getClientSerial());
      }
      result = result && (hasWayNo() == other.hasWayNo());
      if (hasWayNo()) {
        result = result && (getWayNo()
            == other.getWayNo());
      }
      result = result && (hasWayName() == other.hasWayName());
      if (hasWayName()) {
        result = result && getWayName()
            .equals(other.getWayName());
      }
      result = result && (hasLicense() == other.hasLicense());
      if (hasLicense()) {
        result = result && getLicense()
            .equals(other.getLicense());
      }
      result = result && (hasInTime() == other.hasInTime());
      if (hasInTime()) {
        result = result && getInTime()
            .equals(other.getInTime());
      }
      result = result && (hasCarClass() == other.hasCarClass());
      if (hasCarClass()) {
        result = result && (getCarClass()
            == other.getCarClass());
      }
      result = result && (hasCarType() == other.hasCarType());
      if (hasCarType()) {
        result = result && (getCarType()
            == other.getCarType());
      }
      result = result && (hasTotalBerthCount() == other.hasTotalBerthCount());
      if (hasTotalBerthCount()) {
        result = result && (getTotalBerthCount()
            == other.getTotalBerthCount());
      }
      result = result && (hasEmptyBerthCount() == other.hasEmptyBerthCount());
      if (hasEmptyBerthCount()) {
        result = result && (getEmptyBerthCount()
            == other.getEmptyBerthCount());
      }
      result = result && (hasInOpen() == other.hasInOpen());
      if (hasInOpen()) {
        result = result && (getInOpen()
            == other.getInOpen());
      }
      result = result && (hasOpenSerial() == other.hasOpenSerial());
      if (hasOpenSerial()) {
        result = result && getOpenSerial()
            .equals(other.getOpenSerial());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasParkingId()) {
        hash = (37 * hash) + PARKING_ID_FIELD_NUMBER;
        hash = (53 * hash) + getParkingId();
      }
      if (hasClientSerial()) {
        hash = (37 * hash) + CLIENTSERIAL_FIELD_NUMBER;
        hash = (53 * hash) + getClientSerial().hashCode();
      }
      if (hasWayNo()) {
        hash = (37 * hash) + WAYNO_FIELD_NUMBER;
        hash = (53 * hash) + getWayNo();
      }
      if (hasWayName()) {
        hash = (37 * hash) + WAYNAME_FIELD_NUMBER;
        hash = (53 * hash) + getWayName().hashCode();
      }
      if (hasLicense()) {
        hash = (37 * hash) + LICENSE_FIELD_NUMBER;
        hash = (53 * hash) + getLicense().hashCode();
      }
      if (hasInTime()) {
        hash = (37 * hash) + INTIME_FIELD_NUMBER;
        hash = (53 * hash) + getInTime().hashCode();
      }
      if (hasCarClass()) {
        hash = (37 * hash) + CARCLASS_FIELD_NUMBER;
        hash = (53 * hash) + getCarClass();
      }
      if (hasCarType()) {
        hash = (37 * hash) + CARTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCarType();
      }
      if (hasTotalBerthCount()) {
        hash = (37 * hash) + TOTALBERTHCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getTotalBerthCount();
      }
      if (hasEmptyBerthCount()) {
        hash = (37 * hash) + EMPTYBERTHCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getEmptyBerthCount();
      }
      if (hasInOpen()) {
        hash = (37 * hash) + INOPEN_FIELD_NUMBER;
        hash = (53 * hash) + getInOpen();
      }
      if (hasOpenSerial()) {
        hash = (37 * hash) + OPENSERIAL_FIELD_NUMBER;
        hash = (53 * hash) + getOpenSerial().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static A110 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static A110 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static A110 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static A110 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static A110 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static A110 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static A110 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static A110 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static A110 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static A110 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static A110 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static A110 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(A110 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *核心业务指令-进场汇报指令-请求对象
     * </pre>
     *
     * Protobuf type {@code A110}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:A110)
        A110OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BaseData10.internal_static_A110_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BaseData10.internal_static_A110_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                A110.class, Builder.class);
      }

      // Construct using com.common.model.protobuf.BaseData10.A110.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        parkingId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        wayNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        wayName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        license_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        inTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        carClass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        carType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        totalBerthCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        emptyBerthCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        inOpen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        openSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BaseData10.internal_static_A110_descriptor;
      }

      public A110 getDefaultInstanceForType() {
        return A110.getDefaultInstance();
      }

      public A110 build() {
        A110 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public A110 buildPartial() {
        A110 result = new A110(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.parkingId_ = parkingId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientSerial_ = clientSerial_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wayNo_ = wayNo_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.wayName_ = wayName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.license_ = license_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.inTime_ = inTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.carClass_ = carClass_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.carType_ = carType_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.totalBerthCount_ = totalBerthCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.emptyBerthCount_ = emptyBerthCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.inOpen_ = inOpen_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.openSerial_ = openSerial_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof A110) {
          return mergeFrom((A110)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(A110 other) {
        if (other == A110.getDefaultInstance()) return this;
        if (other.hasParkingId()) {
          setParkingId(other.getParkingId());
        }
        if (other.hasClientSerial()) {
          bitField0_ |= 0x00000002;
          clientSerial_ = other.clientSerial_;
          onChanged();
        }
        if (other.hasWayNo()) {
          setWayNo(other.getWayNo());
        }
        if (other.hasWayName()) {
          bitField0_ |= 0x00000008;
          wayName_ = other.wayName_;
          onChanged();
        }
        if (other.hasLicense()) {
          bitField0_ |= 0x00000010;
          license_ = other.license_;
          onChanged();
        }
        if (other.hasInTime()) {
          bitField0_ |= 0x00000020;
          inTime_ = other.inTime_;
          onChanged();
        }
        if (other.hasCarClass()) {
          setCarClass(other.getCarClass());
        }
        if (other.hasCarType()) {
          setCarType(other.getCarType());
        }
        if (other.hasTotalBerthCount()) {
          setTotalBerthCount(other.getTotalBerthCount());
        }
        if (other.hasEmptyBerthCount()) {
          setEmptyBerthCount(other.getEmptyBerthCount());
        }
        if (other.hasInOpen()) {
          setInOpen(other.getInOpen());
        }
        if (other.hasOpenSerial()) {
          bitField0_ |= 0x00000800;
          openSerial_ = other.openSerial_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasParkingId()) {
          return false;
        }
        if (!hasClientSerial()) {
          return false;
        }
        if (!hasWayNo()) {
          return false;
        }
        if (!hasWayName()) {
          return false;
        }
        if (!hasLicense()) {
          return false;
        }
        if (!hasInTime()) {
          return false;
        }
        if (!hasCarClass()) {
          return false;
        }
        if (!hasCarType()) {
          return false;
        }
        if (!hasTotalBerthCount()) {
          return false;
        }
        if (!hasEmptyBerthCount()) {
          return false;
        }
        if (!hasInOpen()) {
          return false;
        }
        if (!hasOpenSerial()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        A110 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (A110) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int parkingId_ ;
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required int32 parking_id = 2;</code>
       */
      public boolean hasParkingId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required int32 parking_id = 2;</code>
       */
      public int getParkingId() {
        return parkingId_;
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required int32 parking_id = 2;</code>
       */
      public Builder setParkingId(int value) {
        bitField0_ |= 0x00000001;
        parkingId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *停车场编号
       * </pre>
       *
       * <code>required int32 parking_id = 2;</code>
       */
      public Builder clearParkingId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        parkingId_ = 0;
        onChanged();
        return this;
      }

      private Object clientSerial_ = "";
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string clientSerial = 3;</code>
       */
      public boolean hasClientSerial() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string clientSerial = 3;</code>
       */
      public String getClientSerial() {
        Object ref = clientSerial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientSerial_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string clientSerial = 3;</code>
       */
      public com.google.protobuf.ByteString
          getClientSerialBytes() {
        Object ref = clientSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          clientSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string clientSerial = 3;</code>
       */
      public Builder setClientSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        clientSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string clientSerial = 3;</code>
       */
      public Builder clearClientSerial() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientSerial_ = getDefaultInstance().getClientSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string clientSerial = 3;</code>
       */
      public Builder setClientSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        clientSerial_ = value;
        onChanged();
        return this;
      }

      private int wayNo_ ;
      /**
       * <pre>
       *通道编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public boolean hasWayNo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *通道编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public int getWayNo() {
        return wayNo_;
      }
      /**
       * <pre>
       *通道编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public Builder setWayNo(int value) {
        bitField0_ |= 0x00000004;
        wayNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通道编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public Builder clearWayNo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wayNo_ = 0;
        onChanged();
        return this;
      }

      private Object wayName_ = "";
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public boolean hasWayName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public String getWayName() {
        Object ref = wayName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            wayName_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getWayNameBytes() {
        Object ref = wayName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          wayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public Builder setWayName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        wayName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public Builder clearWayName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        wayName_ = getDefaultInstance().getWayName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通道名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public Builder setWayNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        wayName_ = value;
        onChanged();
        return this;
      }

      private Object license_ = "";
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public boolean hasLicense() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public String getLicense() {
        Object ref = license_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            license_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLicenseBytes() {
        Object ref = license_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          license_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public Builder setLicense(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        license_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public Builder clearLicense() {
        bitField0_ = (bitField0_ & ~0x00000010);
        license_ = getDefaultInstance().getLicense();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public Builder setLicenseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        license_ = value;
        onChanged();
        return this;
      }

      private Object inTime_ = "";
      /**
       * <pre>
       *入场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public boolean hasInTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *入场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public String getInTime() {
        Object ref = inTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            inTime_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *入场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public com.google.protobuf.ByteString
          getInTimeBytes() {
        Object ref = inTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          inTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *入场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public Builder setInTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        inTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *入场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public Builder clearInTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inTime_ = getDefaultInstance().getInTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *入场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public Builder setInTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        inTime_ = value;
        onChanged();
        return this;
      }

      private int carClass_ ;
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 8;</code>
       */
      public boolean hasCarClass() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 8;</code>
       */
      public int getCarClass() {
        return carClass_;
      }
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 8;</code>
       */
      public Builder setCarClass(int value) {
        bitField0_ |= 0x00000040;
        carClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 8;</code>
       */
      public Builder clearCarClass() {
        bitField0_ = (bitField0_ & ~0x00000040);
        carClass_ = 0;
        onChanged();
        return this;
      }

      private int carType_ ;
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public boolean hasCarType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public int getCarType() {
        return carType_;
      }
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public Builder setCarType(int value) {
        bitField0_ |= 0x00000080;
        carType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 9;</code>
       */
      public Builder clearCarType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        carType_ = 0;
        onChanged();
        return this;
      }

      private int totalBerthCount_ ;
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalBerthCount = 10;</code>
       */
      public boolean hasTotalBerthCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalBerthCount = 10;</code>
       */
      public int getTotalBerthCount() {
        return totalBerthCount_;
      }
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalBerthCount = 10;</code>
       */
      public Builder setTotalBerthCount(int value) {
        bitField0_ |= 0x00000100;
        totalBerthCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalBerthCount = 10;</code>
       */
      public Builder clearTotalBerthCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalBerthCount_ = 0;
        onChanged();
        return this;
      }

      private int emptyBerthCount_ ;
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emptyBerthCount = 11;</code>
       */
      public boolean hasEmptyBerthCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emptyBerthCount = 11;</code>
       */
      public int getEmptyBerthCount() {
        return emptyBerthCount_;
      }
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emptyBerthCount = 11;</code>
       */
      public Builder setEmptyBerthCount(int value) {
        bitField0_ |= 0x00000200;
        emptyBerthCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emptyBerthCount = 11;</code>
       */
      public Builder clearEmptyBerthCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        emptyBerthCount_ = 0;
        onChanged();
        return this;
      }

      private int inOpen_ ;
      /**
       * <pre>
       *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
       * </pre>
       *
       * <code>required int32 inOpen = 12;</code>
       */
      public boolean hasInOpen() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
       * </pre>
       *
       * <code>required int32 inOpen = 12;</code>
       */
      public int getInOpen() {
        return inOpen_;
      }
      /**
       * <pre>
       *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
       * </pre>
       *
       * <code>required int32 inOpen = 12;</code>
       */
      public Builder setInOpen(int value) {
        bitField0_ |= 0x00000400;
        inOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *进场放行方式：0其它方式、1自动识别开闸、2（车主APP或微信）扫码开闸进场、3（管理员PDA或管理）远程控制开闸进场、4（管理员岗亭）控制开闸进场、20取卡进场
       * </pre>
       *
       * <code>required int32 inOpen = 12;</code>
       */
      public Builder clearInOpen() {
        bitField0_ = (bitField0_ & ~0x00000400);
        inOpen_ = 0;
        onChanged();
        return this;
      }

      private Object openSerial_ = "";
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>required string openSerial = 13;</code>
       */
      public boolean hasOpenSerial() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>required string openSerial = 13;</code>
       */
      public String getOpenSerial() {
        Object ref = openSerial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            openSerial_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>required string openSerial = 13;</code>
       */
      public com.google.protobuf.ByteString
          getOpenSerialBytes() {
        Object ref = openSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          openSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>required string openSerial = 13;</code>
       */
      public Builder setOpenSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        openSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>required string openSerial = 13;</code>
       */
      public Builder clearOpenSerial() {
        bitField0_ = (bitField0_ & ~0x00000800);
        openSerial_ = getDefaultInstance().getOpenSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>required string openSerial = 13;</code>
       */
      public Builder setOpenSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        openSerial_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:A110)
    }

    // @@protoc_insertion_point(class_scope:A110)
    private static final A110 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new A110();
    }

    public static A110 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<A110>
        PARSER = new com.google.protobuf.AbstractParser<A110>() {
      public A110 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new A110(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<A110> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<A110> getParserForType() {
      return PARSER;
    }

    public A110 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface B110OrBuilder extends
      // @@protoc_insertion_point(interface_extends:B110)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *核心业务指令-进场汇报指令-应答对象
   * </pre>
   *
   * Protobuf type {@code B110}
   */
  public  static final class B110 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:B110)
      B110OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use B110.newBuilder() to construct.
    private B110(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private B110() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private B110(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BaseData10.internal_static_B110_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BaseData10.internal_static_B110_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              B110.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof B110)) {
        return super.equals(obj);
      }
      B110 other = (B110) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static B110 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static B110 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static B110 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static B110 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static B110 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static B110 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static B110 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static B110 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static B110 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static B110 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static B110 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static B110 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(B110 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *核心业务指令-进场汇报指令-应答对象
     * </pre>
     *
     * Protobuf type {@code B110}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:B110)
        B110OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BaseData10.internal_static_B110_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BaseData10.internal_static_B110_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                B110.class, Builder.class);
      }

      // Construct using com.common.model.protobuf.BaseData10.B110.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BaseData10.internal_static_B110_descriptor;
      }

      public B110 getDefaultInstanceForType() {
        return B110.getDefaultInstance();
      }

      public B110 build() {
        B110 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public B110 buildPartial() {
        B110 result = new B110(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof B110) {
          return mergeFrom((B110)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(B110 other) {
        if (other == B110.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        B110 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (B110) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:B110)
    }

    // @@protoc_insertion_point(class_scope:B110)
    private static final B110 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new B110();
    }

    public static B110 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<B110>
        PARSER = new com.google.protobuf.AbstractParser<B110>() {
      public B110 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new B110(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<B110> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<B110> getParserForType() {
      return PARSER;
    }

    public B110 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_A110_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_A110_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_B110_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_B110_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020BaseData10.proto\"\352\001\n\004A110\022\022\n\nparking_i" +
      "d\030\002 \002(\005\022\024\n\014clientSerial\030\003 \002(\t\022\r\n\005wayNo\030\004" +
      " \002(\005\022\017\n\007wayName\030\005 \002(\t\022\017\n\007license\030\006 \002(\t\022\016" +
      "\n\006inTime\030\007 \002(\t\022\020\n\010carClass\030\010 \002(\005\022\017\n\007carT" +
      "ype\030\t \002(\005\022\027\n\017totalBerthCount\030\n \002(\005\022\027\n\017em" +
      "ptyBerthCount\030\013 \002(\005\022\016\n\006inOpen\030\014 \002(\005\022\022\n\no" +
      "penSerial\030\r \002(\t\"\006\n\004B110B\'\n\031com.common.mo" +
      "del.protobufB\nBaseData10"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_A110_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_A110_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_A110_descriptor,
        new String[] { "ParkingId", "ClientSerial", "WayNo", "WayName", "License", "InTime", "CarClass", "CarType", "TotalBerthCount", "EmptyBerthCount", "InOpen", "OpenSerial", });
    internal_static_B110_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_B110_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_B110_descriptor,
        new String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
