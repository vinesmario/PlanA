// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseData11.proto

package com.common.netty.protobuf;

public final class BaseData11 {
  private BaseData11() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface A111OrBuilder extends
      // @@protoc_insertion_point(interface_extends:A111)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string inSerial = 1;</code>
     */
    boolean hasInSerial();
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string inSerial = 1;</code>
     */
    String getInSerial();
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string inSerial = 1;</code>
     */
    com.google.protobuf.ByteString
        getInSerialBytes();

    /**
     * <pre>
     *出场流水号
     * </pre>
     *
     * <code>required string outSerial = 2;</code>
     */
    boolean hasOutSerial();
    /**
     * <pre>
     *出场流水号
     * </pre>
     *
     * <code>required string outSerial = 2;</code>
     */
    String getOutSerial();
    /**
     * <pre>
     *出场流水号
     * </pre>
     *
     * <code>required string outSerial = 2;</code>
     */
    com.google.protobuf.ByteString
        getOutSerialBytes();

    /**
     * <pre>
     *停车场id
     * </pre>
     *
     * <code>required int32 parkingId = 3;</code>
     */
    boolean hasParkingId();
    /**
     * <pre>
     *停车场id
     * </pre>
     *
     * <code>required int32 parkingId = 3;</code>
     */
    int getParkingId();

    /**
     * <pre>
     *出口编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    boolean hasWayNo();
    /**
     * <pre>
     *出口编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    int getWayNo();

    /**
     * <pre>
     *出口名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    boolean hasWayName();
    /**
     * <pre>
     *出口名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    String getWayName();
    /**
     * <pre>
     *出口名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    com.google.protobuf.ByteString
        getWayNameBytes();

    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    boolean hasLicense();
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    String getLicense();
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    com.google.protobuf.ByteString
        getLicenseBytes();

    /**
     * <pre>
     *进场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    boolean hasInTime();
    /**
     * <pre>
     *进场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    String getInTime();
    /**
     * <pre>
     *进场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    com.google.protobuf.ByteString
        getInTimeBytes();

    /**
     * <pre>
     *出场时间
     * </pre>
     *
     * <code>required string outTime = 8;</code>
     */
    boolean hasOutTime();
    /**
     * <pre>
     *出场时间
     * </pre>
     *
     * <code>required string outTime = 8;</code>
     */
    String getOutTime();
    /**
     * <pre>
     *出场时间
     * </pre>
     *
     * <code>required string outTime = 8;</code>
     */
    com.google.protobuf.ByteString
        getOutTimeBytes();

    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 9;</code>
     */
    boolean hasCarClass();
    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 9;</code>
     */
    int getCarClass();

    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 10;</code>
     */
    boolean hasCarType();
    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 10;</code>
     */
    int getCarType();

    /**
     * <pre>
     *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
     * </pre>
     *
     * <code>required int32 payStatus = 11;</code>
     */
    boolean hasPayStatus();
    /**
     * <pre>
     *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
     * </pre>
     *
     * <code>required int32 payStatus = 11;</code>
     */
    int getPayStatus();

    /**
     * <pre>
     *应收金额
     * </pre>
     *
     * <code>required int32 shoulePay = 12;</code>
     */
    boolean hasShoulePay();
    /**
     * <pre>
     *应收金额
     * </pre>
     *
     * <code>required int32 shoulePay = 12;</code>
     */
    int getShoulePay();

    /**
     * <pre>
     *实收金额
     * </pre>
     *
     * <code>required int32 realPay = 13;</code>
     */
    boolean hasRealPay();
    /**
     * <pre>
     *实收金额
     * </pre>
     *
     * <code>required int32 realPay = 13;</code>
     */
    int getRealPay();

    /**
     * <pre>
     *现金支付
     * </pre>
     *
     * <code>required int32 cashPay = 14;</code>
     */
    boolean hasCashPay();
    /**
     * <pre>
     *现金支付
     * </pre>
     *
     * <code>required int32 cashPay = 14;</code>
     */
    int getCashPay();

    /**
     * <pre>
     *线上支金额
     * </pre>
     *
     * <code>required int32 onlinePay = 15;</code>
     */
    boolean hasOnlinePay();
    /**
     * <pre>
     *线上支金额
     * </pre>
     *
     * <code>required int32 onlinePay = 15;</code>
     */
    int getOnlinePay();

    /**
     * <pre>
     *减免金额
     * </pre>
     *
     * <code>required int32 freeMoney = 16;</code>
     */
    boolean hasFreeMoney();
    /**
     * <pre>
     *减免金额
     * </pre>
     *
     * <code>required int32 freeMoney = 16;</code>
     */
    int getFreeMoney();

    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emtySpace = 17;</code>
     */
    boolean hasEmtySpace();
    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emtySpace = 17;</code>
     */
    int getEmtySpace();

    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalSpace = 18;</code>
     */
    boolean hasTotalSpace();
    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalSpace = 18;</code>
     */
    int getTotalSpace();

    /**
     * <pre>
     *放行方式
     * </pre>
     *
     * <code>required int32 openType = 19;</code>
     */
    boolean hasOpenType();
    /**
     * <pre>
     *放行方式
     * </pre>
     *
     * <code>required int32 openType = 19;</code>
     */
    int getOpenType();

    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>optional string openSerial = 20;</code>
     */
    boolean hasOpenSerial();
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>optional string openSerial = 20;</code>
     */
    String getOpenSerial();
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>optional string openSerial = 20;</code>
     */
    com.google.protobuf.ByteString
        getOpenSerialBytes();
  }
  /**
   * <pre>
   *核心业务指令-出场汇报指令-请求对象
   * </pre>
   *
   * Protobuf type {@code A111}
   */
  public  static final class A111 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:A111)
      A111OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use A111.newBuilder() to construct.
    private A111(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private A111() {
      inSerial_ = "";
      outSerial_ = "";
      parkingId_ = 0;
      wayNo_ = 0;
      wayName_ = "";
      license_ = "";
      inTime_ = "";
      outTime_ = "";
      carClass_ = 0;
      carType_ = 0;
      payStatus_ = 0;
      shoulePay_ = 0;
      realPay_ = 0;
      cashPay_ = 0;
      onlinePay_ = 0;
      freeMoney_ = 0;
      emtySpace_ = 0;
      totalSpace_ = 0;
      openType_ = 0;
      openSerial_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private A111(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              inSerial_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              outSerial_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              parkingId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              wayNo_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              wayName_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              license_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              inTime_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              outTime_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              carClass_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              carType_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              payStatus_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              shoulePay_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              realPay_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              cashPay_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              onlinePay_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              freeMoney_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              emtySpace_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              totalSpace_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              openType_ = input.readInt32();
              break;
            }
            case 162: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00080000;
              openSerial_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BaseData11.internal_static_A111_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BaseData11.internal_static_A111_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              A111.class, Builder.class);
    }

    private int bitField0_;
    public static final int INSERIAL_FIELD_NUMBER = 1;
    private volatile Object inSerial_;
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string inSerial = 1;</code>
     */
    public boolean hasInSerial() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string inSerial = 1;</code>
     */
    public String getInSerial() {
      Object ref = inSerial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *进场流水号
     * </pre>
     *
     * <code>required string inSerial = 1;</code>
     */
    public com.google.protobuf.ByteString
        getInSerialBytes() {
      Object ref = inSerial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        inSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OUTSERIAL_FIELD_NUMBER = 2;
    private volatile Object outSerial_;
    /**
     * <pre>
     *出场流水号
     * </pre>
     *
     * <code>required string outSerial = 2;</code>
     */
    public boolean hasOutSerial() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *出场流水号
     * </pre>
     *
     * <code>required string outSerial = 2;</code>
     */
    public String getOutSerial() {
      Object ref = outSerial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          outSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *出场流水号
     * </pre>
     *
     * <code>required string outSerial = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOutSerialBytes() {
      Object ref = outSerial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        outSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARKINGID_FIELD_NUMBER = 3;
    private int parkingId_;
    /**
     * <pre>
     *停车场id
     * </pre>
     *
     * <code>required int32 parkingId = 3;</code>
     */
    public boolean hasParkingId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *停车场id
     * </pre>
     *
     * <code>required int32 parkingId = 3;</code>
     */
    public int getParkingId() {
      return parkingId_;
    }

    public static final int WAYNO_FIELD_NUMBER = 4;
    private int wayNo_;
    /**
     * <pre>
     *出口编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    public boolean hasWayNo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *出口编号
     * </pre>
     *
     * <code>required int32 wayNo = 4;</code>
     */
    public int getWayNo() {
      return wayNo_;
    }

    public static final int WAYNAME_FIELD_NUMBER = 5;
    private volatile Object wayName_;
    /**
     * <pre>
     *出口名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    public boolean hasWayName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *出口名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    public String getWayName() {
      Object ref = wayName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wayName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *出口名称
     * </pre>
     *
     * <code>required string wayName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getWayNameBytes() {
      Object ref = wayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        wayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LICENSE_FIELD_NUMBER = 6;
    private volatile Object license_;
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    public boolean hasLicense() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    public String getLicense() {
      Object ref = license_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          license_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *车牌号码
     * </pre>
     *
     * <code>required string license = 6;</code>
     */
    public com.google.protobuf.ByteString
        getLicenseBytes() {
      Object ref = license_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        license_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTIME_FIELD_NUMBER = 7;
    private volatile Object inTime_;
    /**
     * <pre>
     *进场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    public boolean hasInTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *进场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    public String getInTime() {
      Object ref = inTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *进场时间
     * </pre>
     *
     * <code>required string inTime = 7;</code>
     */
    public com.google.protobuf.ByteString
        getInTimeBytes() {
      Object ref = inTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        inTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OUTTIME_FIELD_NUMBER = 8;
    private volatile Object outTime_;
    /**
     * <pre>
     *出场时间
     * </pre>
     *
     * <code>required string outTime = 8;</code>
     */
    public boolean hasOutTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *出场时间
     * </pre>
     *
     * <code>required string outTime = 8;</code>
     */
    public String getOutTime() {
      Object ref = outTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          outTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *出场时间
     * </pre>
     *
     * <code>required string outTime = 8;</code>
     */
    public com.google.protobuf.ByteString
        getOutTimeBytes() {
      Object ref = outTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        outTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CARCLASS_FIELD_NUMBER = 9;
    private int carClass_;
    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 9;</code>
     */
    public boolean hasCarClass() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *车类型
     * </pre>
     *
     * <code>required int32 carClass = 9;</code>
     */
    public int getCarClass() {
      return carClass_;
    }

    public static final int CARTYPE_FIELD_NUMBER = 10;
    private int carType_;
    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 10;</code>
     */
    public boolean hasCarType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *车型
     * </pre>
     *
     * <code>required int32 carType = 10;</code>
     */
    public int getCarType() {
      return carType_;
    }

    public static final int PAYSTATUS_FIELD_NUMBER = 11;
    private int payStatus_;
    /**
     * <pre>
     *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
     * </pre>
     *
     * <code>required int32 payStatus = 11;</code>
     */
    public boolean hasPayStatus() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
     * </pre>
     *
     * <code>required int32 payStatus = 11;</code>
     */
    public int getPayStatus() {
      return payStatus_;
    }

    public static final int SHOULEPAY_FIELD_NUMBER = 12;
    private int shoulePay_;
    /**
     * <pre>
     *应收金额
     * </pre>
     *
     * <code>required int32 shoulePay = 12;</code>
     */
    public boolean hasShoulePay() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *应收金额
     * </pre>
     *
     * <code>required int32 shoulePay = 12;</code>
     */
    public int getShoulePay() {
      return shoulePay_;
    }

    public static final int REALPAY_FIELD_NUMBER = 13;
    private int realPay_;
    /**
     * <pre>
     *实收金额
     * </pre>
     *
     * <code>required int32 realPay = 13;</code>
     */
    public boolean hasRealPay() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *实收金额
     * </pre>
     *
     * <code>required int32 realPay = 13;</code>
     */
    public int getRealPay() {
      return realPay_;
    }

    public static final int CASHPAY_FIELD_NUMBER = 14;
    private int cashPay_;
    /**
     * <pre>
     *现金支付
     * </pre>
     *
     * <code>required int32 cashPay = 14;</code>
     */
    public boolean hasCashPay() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *现金支付
     * </pre>
     *
     * <code>required int32 cashPay = 14;</code>
     */
    public int getCashPay() {
      return cashPay_;
    }

    public static final int ONLINEPAY_FIELD_NUMBER = 15;
    private int onlinePay_;
    /**
     * <pre>
     *线上支金额
     * </pre>
     *
     * <code>required int32 onlinePay = 15;</code>
     */
    public boolean hasOnlinePay() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *线上支金额
     * </pre>
     *
     * <code>required int32 onlinePay = 15;</code>
     */
    public int getOnlinePay() {
      return onlinePay_;
    }

    public static final int FREEMONEY_FIELD_NUMBER = 16;
    private int freeMoney_;
    /**
     * <pre>
     *减免金额
     * </pre>
     *
     * <code>required int32 freeMoney = 16;</code>
     */
    public boolean hasFreeMoney() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *减免金额
     * </pre>
     *
     * <code>required int32 freeMoney = 16;</code>
     */
    public int getFreeMoney() {
      return freeMoney_;
    }

    public static final int EMTYSPACE_FIELD_NUMBER = 17;
    private int emtySpace_;
    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emtySpace = 17;</code>
     */
    public boolean hasEmtySpace() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *空车位数
     * </pre>
     *
     * <code>required int32 emtySpace = 17;</code>
     */
    public int getEmtySpace() {
      return emtySpace_;
    }

    public static final int TOTALSPACE_FIELD_NUMBER = 18;
    private int totalSpace_;
    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalSpace = 18;</code>
     */
    public boolean hasTotalSpace() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *总车位数
     * </pre>
     *
     * <code>required int32 totalSpace = 18;</code>
     */
    public int getTotalSpace() {
      return totalSpace_;
    }

    public static final int OPENTYPE_FIELD_NUMBER = 19;
    private int openType_;
    /**
     * <pre>
     *放行方式
     * </pre>
     *
     * <code>required int32 openType = 19;</code>
     */
    public boolean hasOpenType() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *放行方式
     * </pre>
     *
     * <code>required int32 openType = 19;</code>
     */
    public int getOpenType() {
      return openType_;
    }

    public static final int OPENSERIAL_FIELD_NUMBER = 20;
    private volatile Object openSerial_;
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>optional string openSerial = 20;</code>
     */
    public boolean hasOpenSerial() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>optional string openSerial = 20;</code>
     */
    public String getOpenSerial() {
      Object ref = openSerial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          openSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *开闸放行流水(2和3有效)
     * </pre>
     *
     * <code>optional string openSerial = 20;</code>
     */
    public com.google.protobuf.ByteString
        getOpenSerialBytes() {
      Object ref = openSerial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        openSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasInSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOutSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasParkingId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWayNo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWayName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLicense()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOutTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCarClass()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCarType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShoulePay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRealPay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCashPay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOnlinePay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFreeMoney()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEmtySpace()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalSpace()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOpenType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, inSerial_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, outSerial_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, parkingId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, wayNo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, wayName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, license_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, inTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, outTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, carClass_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, carType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, payStatus_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, shoulePay_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, realPay_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, cashPay_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, onlinePay_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, freeMoney_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, emtySpace_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, totalSpace_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, openType_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, openSerial_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, inSerial_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, outSerial_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, parkingId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, wayNo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, wayName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, license_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, inTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, outTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, carClass_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, carType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, payStatus_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, shoulePay_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, realPay_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, cashPay_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, onlinePay_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, freeMoney_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, emtySpace_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, totalSpace_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, openType_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, openSerial_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof A111)) {
        return super.equals(obj);
      }
      A111 other = (A111) obj;

      boolean result = true;
      result = result && (hasInSerial() == other.hasInSerial());
      if (hasInSerial()) {
        result = result && getInSerial()
            .equals(other.getInSerial());
      }
      result = result && (hasOutSerial() == other.hasOutSerial());
      if (hasOutSerial()) {
        result = result && getOutSerial()
            .equals(other.getOutSerial());
      }
      result = result && (hasParkingId() == other.hasParkingId());
      if (hasParkingId()) {
        result = result && (getParkingId()
            == other.getParkingId());
      }
      result = result && (hasWayNo() == other.hasWayNo());
      if (hasWayNo()) {
        result = result && (getWayNo()
            == other.getWayNo());
      }
      result = result && (hasWayName() == other.hasWayName());
      if (hasWayName()) {
        result = result && getWayName()
            .equals(other.getWayName());
      }
      result = result && (hasLicense() == other.hasLicense());
      if (hasLicense()) {
        result = result && getLicense()
            .equals(other.getLicense());
      }
      result = result && (hasInTime() == other.hasInTime());
      if (hasInTime()) {
        result = result && getInTime()
            .equals(other.getInTime());
      }
      result = result && (hasOutTime() == other.hasOutTime());
      if (hasOutTime()) {
        result = result && getOutTime()
            .equals(other.getOutTime());
      }
      result = result && (hasCarClass() == other.hasCarClass());
      if (hasCarClass()) {
        result = result && (getCarClass()
            == other.getCarClass());
      }
      result = result && (hasCarType() == other.hasCarType());
      if (hasCarType()) {
        result = result && (getCarType()
            == other.getCarType());
      }
      result = result && (hasPayStatus() == other.hasPayStatus());
      if (hasPayStatus()) {
        result = result && (getPayStatus()
            == other.getPayStatus());
      }
      result = result && (hasShoulePay() == other.hasShoulePay());
      if (hasShoulePay()) {
        result = result && (getShoulePay()
            == other.getShoulePay());
      }
      result = result && (hasRealPay() == other.hasRealPay());
      if (hasRealPay()) {
        result = result && (getRealPay()
            == other.getRealPay());
      }
      result = result && (hasCashPay() == other.hasCashPay());
      if (hasCashPay()) {
        result = result && (getCashPay()
            == other.getCashPay());
      }
      result = result && (hasOnlinePay() == other.hasOnlinePay());
      if (hasOnlinePay()) {
        result = result && (getOnlinePay()
            == other.getOnlinePay());
      }
      result = result && (hasFreeMoney() == other.hasFreeMoney());
      if (hasFreeMoney()) {
        result = result && (getFreeMoney()
            == other.getFreeMoney());
      }
      result = result && (hasEmtySpace() == other.hasEmtySpace());
      if (hasEmtySpace()) {
        result = result && (getEmtySpace()
            == other.getEmtySpace());
      }
      result = result && (hasTotalSpace() == other.hasTotalSpace());
      if (hasTotalSpace()) {
        result = result && (getTotalSpace()
            == other.getTotalSpace());
      }
      result = result && (hasOpenType() == other.hasOpenType());
      if (hasOpenType()) {
        result = result && (getOpenType()
            == other.getOpenType());
      }
      result = result && (hasOpenSerial() == other.hasOpenSerial());
      if (hasOpenSerial()) {
        result = result && getOpenSerial()
            .equals(other.getOpenSerial());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInSerial()) {
        hash = (37 * hash) + INSERIAL_FIELD_NUMBER;
        hash = (53 * hash) + getInSerial().hashCode();
      }
      if (hasOutSerial()) {
        hash = (37 * hash) + OUTSERIAL_FIELD_NUMBER;
        hash = (53 * hash) + getOutSerial().hashCode();
      }
      if (hasParkingId()) {
        hash = (37 * hash) + PARKINGID_FIELD_NUMBER;
        hash = (53 * hash) + getParkingId();
      }
      if (hasWayNo()) {
        hash = (37 * hash) + WAYNO_FIELD_NUMBER;
        hash = (53 * hash) + getWayNo();
      }
      if (hasWayName()) {
        hash = (37 * hash) + WAYNAME_FIELD_NUMBER;
        hash = (53 * hash) + getWayName().hashCode();
      }
      if (hasLicense()) {
        hash = (37 * hash) + LICENSE_FIELD_NUMBER;
        hash = (53 * hash) + getLicense().hashCode();
      }
      if (hasInTime()) {
        hash = (37 * hash) + INTIME_FIELD_NUMBER;
        hash = (53 * hash) + getInTime().hashCode();
      }
      if (hasOutTime()) {
        hash = (37 * hash) + OUTTIME_FIELD_NUMBER;
        hash = (53 * hash) + getOutTime().hashCode();
      }
      if (hasCarClass()) {
        hash = (37 * hash) + CARCLASS_FIELD_NUMBER;
        hash = (53 * hash) + getCarClass();
      }
      if (hasCarType()) {
        hash = (37 * hash) + CARTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCarType();
      }
      if (hasPayStatus()) {
        hash = (37 * hash) + PAYSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getPayStatus();
      }
      if (hasShoulePay()) {
        hash = (37 * hash) + SHOULEPAY_FIELD_NUMBER;
        hash = (53 * hash) + getShoulePay();
      }
      if (hasRealPay()) {
        hash = (37 * hash) + REALPAY_FIELD_NUMBER;
        hash = (53 * hash) + getRealPay();
      }
      if (hasCashPay()) {
        hash = (37 * hash) + CASHPAY_FIELD_NUMBER;
        hash = (53 * hash) + getCashPay();
      }
      if (hasOnlinePay()) {
        hash = (37 * hash) + ONLINEPAY_FIELD_NUMBER;
        hash = (53 * hash) + getOnlinePay();
      }
      if (hasFreeMoney()) {
        hash = (37 * hash) + FREEMONEY_FIELD_NUMBER;
        hash = (53 * hash) + getFreeMoney();
      }
      if (hasEmtySpace()) {
        hash = (37 * hash) + EMTYSPACE_FIELD_NUMBER;
        hash = (53 * hash) + getEmtySpace();
      }
      if (hasTotalSpace()) {
        hash = (37 * hash) + TOTALSPACE_FIELD_NUMBER;
        hash = (53 * hash) + getTotalSpace();
      }
      if (hasOpenType()) {
        hash = (37 * hash) + OPENTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getOpenType();
      }
      if (hasOpenSerial()) {
        hash = (37 * hash) + OPENSERIAL_FIELD_NUMBER;
        hash = (53 * hash) + getOpenSerial().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static A111 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static A111 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static A111 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static A111 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static A111 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static A111 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static A111 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static A111 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static A111 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static A111 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static A111 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static A111 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(A111 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *核心业务指令-出场汇报指令-请求对象
     * </pre>
     *
     * Protobuf type {@code A111}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:A111)
        A111OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BaseData11.internal_static_A111_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BaseData11.internal_static_A111_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                A111.class, Builder.class);
      }

      // Construct using com.common.model.protobuf.BaseData11.A111.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        inSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        outSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        parkingId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        wayNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        wayName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        license_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        inTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        outTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        carClass_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        carType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        payStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        shoulePay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        realPay_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        cashPay_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        onlinePay_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        freeMoney_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        emtySpace_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        totalSpace_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        openType_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        openSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BaseData11.internal_static_A111_descriptor;
      }

      public A111 getDefaultInstanceForType() {
        return A111.getDefaultInstance();
      }

      public A111 build() {
        A111 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public A111 buildPartial() {
        A111 result = new A111(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.inSerial_ = inSerial_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.outSerial_ = outSerial_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.parkingId_ = parkingId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.wayNo_ = wayNo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.wayName_ = wayName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.license_ = license_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.inTime_ = inTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.outTime_ = outTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.carClass_ = carClass_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.carType_ = carType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.payStatus_ = payStatus_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.shoulePay_ = shoulePay_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.realPay_ = realPay_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.cashPay_ = cashPay_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.onlinePay_ = onlinePay_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.freeMoney_ = freeMoney_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.emtySpace_ = emtySpace_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.totalSpace_ = totalSpace_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.openType_ = openType_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.openSerial_ = openSerial_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof A111) {
          return mergeFrom((A111)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(A111 other) {
        if (other == A111.getDefaultInstance()) return this;
        if (other.hasInSerial()) {
          bitField0_ |= 0x00000001;
          inSerial_ = other.inSerial_;
          onChanged();
        }
        if (other.hasOutSerial()) {
          bitField0_ |= 0x00000002;
          outSerial_ = other.outSerial_;
          onChanged();
        }
        if (other.hasParkingId()) {
          setParkingId(other.getParkingId());
        }
        if (other.hasWayNo()) {
          setWayNo(other.getWayNo());
        }
        if (other.hasWayName()) {
          bitField0_ |= 0x00000010;
          wayName_ = other.wayName_;
          onChanged();
        }
        if (other.hasLicense()) {
          bitField0_ |= 0x00000020;
          license_ = other.license_;
          onChanged();
        }
        if (other.hasInTime()) {
          bitField0_ |= 0x00000040;
          inTime_ = other.inTime_;
          onChanged();
        }
        if (other.hasOutTime()) {
          bitField0_ |= 0x00000080;
          outTime_ = other.outTime_;
          onChanged();
        }
        if (other.hasCarClass()) {
          setCarClass(other.getCarClass());
        }
        if (other.hasCarType()) {
          setCarType(other.getCarType());
        }
        if (other.hasPayStatus()) {
          setPayStatus(other.getPayStatus());
        }
        if (other.hasShoulePay()) {
          setShoulePay(other.getShoulePay());
        }
        if (other.hasRealPay()) {
          setRealPay(other.getRealPay());
        }
        if (other.hasCashPay()) {
          setCashPay(other.getCashPay());
        }
        if (other.hasOnlinePay()) {
          setOnlinePay(other.getOnlinePay());
        }
        if (other.hasFreeMoney()) {
          setFreeMoney(other.getFreeMoney());
        }
        if (other.hasEmtySpace()) {
          setEmtySpace(other.getEmtySpace());
        }
        if (other.hasTotalSpace()) {
          setTotalSpace(other.getTotalSpace());
        }
        if (other.hasOpenType()) {
          setOpenType(other.getOpenType());
        }
        if (other.hasOpenSerial()) {
          bitField0_ |= 0x00080000;
          openSerial_ = other.openSerial_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasInSerial()) {
          return false;
        }
        if (!hasOutSerial()) {
          return false;
        }
        if (!hasParkingId()) {
          return false;
        }
        if (!hasWayNo()) {
          return false;
        }
        if (!hasWayName()) {
          return false;
        }
        if (!hasLicense()) {
          return false;
        }
        if (!hasInTime()) {
          return false;
        }
        if (!hasOutTime()) {
          return false;
        }
        if (!hasCarClass()) {
          return false;
        }
        if (!hasCarType()) {
          return false;
        }
        if (!hasPayStatus()) {
          return false;
        }
        if (!hasShoulePay()) {
          return false;
        }
        if (!hasRealPay()) {
          return false;
        }
        if (!hasCashPay()) {
          return false;
        }
        if (!hasOnlinePay()) {
          return false;
        }
        if (!hasFreeMoney()) {
          return false;
        }
        if (!hasEmtySpace()) {
          return false;
        }
        if (!hasTotalSpace()) {
          return false;
        }
        if (!hasOpenType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        A111 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (A111) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object inSerial_ = "";
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string inSerial = 1;</code>
       */
      public boolean hasInSerial() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string inSerial = 1;</code>
       */
      public String getInSerial() {
        Object ref = inSerial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            inSerial_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string inSerial = 1;</code>
       */
      public com.google.protobuf.ByteString
          getInSerialBytes() {
        Object ref = inSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          inSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string inSerial = 1;</code>
       */
      public Builder setInSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        inSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string inSerial = 1;</code>
       */
      public Builder clearInSerial() {
        bitField0_ = (bitField0_ & ~0x00000001);
        inSerial_ = getDefaultInstance().getInSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *进场流水号
       * </pre>
       *
       * <code>required string inSerial = 1;</code>
       */
      public Builder setInSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        inSerial_ = value;
        onChanged();
        return this;
      }

      private Object outSerial_ = "";
      /**
       * <pre>
       *出场流水号
       * </pre>
       *
       * <code>required string outSerial = 2;</code>
       */
      public boolean hasOutSerial() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *出场流水号
       * </pre>
       *
       * <code>required string outSerial = 2;</code>
       */
      public String getOutSerial() {
        Object ref = outSerial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            outSerial_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *出场流水号
       * </pre>
       *
       * <code>required string outSerial = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOutSerialBytes() {
        Object ref = outSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          outSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *出场流水号
       * </pre>
       *
       * <code>required string outSerial = 2;</code>
       */
      public Builder setOutSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        outSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出场流水号
       * </pre>
       *
       * <code>required string outSerial = 2;</code>
       */
      public Builder clearOutSerial() {
        bitField0_ = (bitField0_ & ~0x00000002);
        outSerial_ = getDefaultInstance().getOutSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出场流水号
       * </pre>
       *
       * <code>required string outSerial = 2;</code>
       */
      public Builder setOutSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        outSerial_ = value;
        onChanged();
        return this;
      }

      private int parkingId_ ;
      /**
       * <pre>
       *停车场id
       * </pre>
       *
       * <code>required int32 parkingId = 3;</code>
       */
      public boolean hasParkingId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *停车场id
       * </pre>
       *
       * <code>required int32 parkingId = 3;</code>
       */
      public int getParkingId() {
        return parkingId_;
      }
      /**
       * <pre>
       *停车场id
       * </pre>
       *
       * <code>required int32 parkingId = 3;</code>
       */
      public Builder setParkingId(int value) {
        bitField0_ |= 0x00000004;
        parkingId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *停车场id
       * </pre>
       *
       * <code>required int32 parkingId = 3;</code>
       */
      public Builder clearParkingId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        parkingId_ = 0;
        onChanged();
        return this;
      }

      private int wayNo_ ;
      /**
       * <pre>
       *出口编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public boolean hasWayNo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *出口编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public int getWayNo() {
        return wayNo_;
      }
      /**
       * <pre>
       *出口编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public Builder setWayNo(int value) {
        bitField0_ |= 0x00000008;
        wayNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出口编号
       * </pre>
       *
       * <code>required int32 wayNo = 4;</code>
       */
      public Builder clearWayNo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        wayNo_ = 0;
        onChanged();
        return this;
      }

      private Object wayName_ = "";
      /**
       * <pre>
       *出口名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public boolean hasWayName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *出口名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public String getWayName() {
        Object ref = wayName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            wayName_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *出口名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getWayNameBytes() {
        Object ref = wayName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          wayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *出口名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public Builder setWayName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        wayName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出口名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public Builder clearWayName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        wayName_ = getDefaultInstance().getWayName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出口名称
       * </pre>
       *
       * <code>required string wayName = 5;</code>
       */
      public Builder setWayNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        wayName_ = value;
        onChanged();
        return this;
      }

      private Object license_ = "";
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public boolean hasLicense() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public String getLicense() {
        Object ref = license_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            license_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLicenseBytes() {
        Object ref = license_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          license_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public Builder setLicense(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        license_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public Builder clearLicense() {
        bitField0_ = (bitField0_ & ~0x00000020);
        license_ = getDefaultInstance().getLicense();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车牌号码
       * </pre>
       *
       * <code>required string license = 6;</code>
       */
      public Builder setLicenseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        license_ = value;
        onChanged();
        return this;
      }

      private Object inTime_ = "";
      /**
       * <pre>
       *进场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public boolean hasInTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *进场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public String getInTime() {
        Object ref = inTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            inTime_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *进场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public com.google.protobuf.ByteString
          getInTimeBytes() {
        Object ref = inTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          inTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *进场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public Builder setInTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        inTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *进场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public Builder clearInTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        inTime_ = getDefaultInstance().getInTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *进场时间
       * </pre>
       *
       * <code>required string inTime = 7;</code>
       */
      public Builder setInTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        inTime_ = value;
        onChanged();
        return this;
      }

      private Object outTime_ = "";
      /**
       * <pre>
       *出场时间
       * </pre>
       *
       * <code>required string outTime = 8;</code>
       */
      public boolean hasOutTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *出场时间
       * </pre>
       *
       * <code>required string outTime = 8;</code>
       */
      public String getOutTime() {
        Object ref = outTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            outTime_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *出场时间
       * </pre>
       *
       * <code>required string outTime = 8;</code>
       */
      public com.google.protobuf.ByteString
          getOutTimeBytes() {
        Object ref = outTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          outTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *出场时间
       * </pre>
       *
       * <code>required string outTime = 8;</code>
       */
      public Builder setOutTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        outTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出场时间
       * </pre>
       *
       * <code>required string outTime = 8;</code>
       */
      public Builder clearOutTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        outTime_ = getDefaultInstance().getOutTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *出场时间
       * </pre>
       *
       * <code>required string outTime = 8;</code>
       */
      public Builder setOutTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        outTime_ = value;
        onChanged();
        return this;
      }

      private int carClass_ ;
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 9;</code>
       */
      public boolean hasCarClass() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 9;</code>
       */
      public int getCarClass() {
        return carClass_;
      }
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 9;</code>
       */
      public Builder setCarClass(int value) {
        bitField0_ |= 0x00000100;
        carClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车类型
       * </pre>
       *
       * <code>required int32 carClass = 9;</code>
       */
      public Builder clearCarClass() {
        bitField0_ = (bitField0_ & ~0x00000100);
        carClass_ = 0;
        onChanged();
        return this;
      }

      private int carType_ ;
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 10;</code>
       */
      public boolean hasCarType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 10;</code>
       */
      public int getCarType() {
        return carType_;
      }
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 10;</code>
       */
      public Builder setCarType(int value) {
        bitField0_ |= 0x00000200;
        carType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车型
       * </pre>
       *
       * <code>required int32 carType = 10;</code>
       */
      public Builder clearCarType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        carType_ = 0;
        onChanged();
        return this;
      }

      private int payStatus_ ;
      /**
       * <pre>
       *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
       * </pre>
       *
       * <code>required int32 payStatus = 11;</code>
       */
      public boolean hasPayStatus() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
       * </pre>
       *
       * <code>required int32 payStatus = 11;</code>
       */
      public int getPayStatus() {
        return payStatus_;
      }
      /**
       * <pre>
       *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
       * </pre>
       *
       * <code>required int32 payStatus = 11;</code>
       */
      public Builder setPayStatus(int value) {
        bitField0_ |= 0x00000400;
        payStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *支付状态 //0 未支付、1 免费、2 已足额支付、3 未足额支付
       * </pre>
       *
       * <code>required int32 payStatus = 11;</code>
       */
      public Builder clearPayStatus() {
        bitField0_ = (bitField0_ & ~0x00000400);
        payStatus_ = 0;
        onChanged();
        return this;
      }

      private int shoulePay_ ;
      /**
       * <pre>
       *应收金额
       * </pre>
       *
       * <code>required int32 shoulePay = 12;</code>
       */
      public boolean hasShoulePay() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *应收金额
       * </pre>
       *
       * <code>required int32 shoulePay = 12;</code>
       */
      public int getShoulePay() {
        return shoulePay_;
      }
      /**
       * <pre>
       *应收金额
       * </pre>
       *
       * <code>required int32 shoulePay = 12;</code>
       */
      public Builder setShoulePay(int value) {
        bitField0_ |= 0x00000800;
        shoulePay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应收金额
       * </pre>
       *
       * <code>required int32 shoulePay = 12;</code>
       */
      public Builder clearShoulePay() {
        bitField0_ = (bitField0_ & ~0x00000800);
        shoulePay_ = 0;
        onChanged();
        return this;
      }

      private int realPay_ ;
      /**
       * <pre>
       *实收金额
       * </pre>
       *
       * <code>required int32 realPay = 13;</code>
       */
      public boolean hasRealPay() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *实收金额
       * </pre>
       *
       * <code>required int32 realPay = 13;</code>
       */
      public int getRealPay() {
        return realPay_;
      }
      /**
       * <pre>
       *实收金额
       * </pre>
       *
       * <code>required int32 realPay = 13;</code>
       */
      public Builder setRealPay(int value) {
        bitField0_ |= 0x00001000;
        realPay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *实收金额
       * </pre>
       *
       * <code>required int32 realPay = 13;</code>
       */
      public Builder clearRealPay() {
        bitField0_ = (bitField0_ & ~0x00001000);
        realPay_ = 0;
        onChanged();
        return this;
      }

      private int cashPay_ ;
      /**
       * <pre>
       *现金支付
       * </pre>
       *
       * <code>required int32 cashPay = 14;</code>
       */
      public boolean hasCashPay() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       *现金支付
       * </pre>
       *
       * <code>required int32 cashPay = 14;</code>
       */
      public int getCashPay() {
        return cashPay_;
      }
      /**
       * <pre>
       *现金支付
       * </pre>
       *
       * <code>required int32 cashPay = 14;</code>
       */
      public Builder setCashPay(int value) {
        bitField0_ |= 0x00002000;
        cashPay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *现金支付
       * </pre>
       *
       * <code>required int32 cashPay = 14;</code>
       */
      public Builder clearCashPay() {
        bitField0_ = (bitField0_ & ~0x00002000);
        cashPay_ = 0;
        onChanged();
        return this;
      }

      private int onlinePay_ ;
      /**
       * <pre>
       *线上支金额
       * </pre>
       *
       * <code>required int32 onlinePay = 15;</code>
       */
      public boolean hasOnlinePay() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       *线上支金额
       * </pre>
       *
       * <code>required int32 onlinePay = 15;</code>
       */
      public int getOnlinePay() {
        return onlinePay_;
      }
      /**
       * <pre>
       *线上支金额
       * </pre>
       *
       * <code>required int32 onlinePay = 15;</code>
       */
      public Builder setOnlinePay(int value) {
        bitField0_ |= 0x00004000;
        onlinePay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *线上支金额
       * </pre>
       *
       * <code>required int32 onlinePay = 15;</code>
       */
      public Builder clearOnlinePay() {
        bitField0_ = (bitField0_ & ~0x00004000);
        onlinePay_ = 0;
        onChanged();
        return this;
      }

      private int freeMoney_ ;
      /**
       * <pre>
       *减免金额
       * </pre>
       *
       * <code>required int32 freeMoney = 16;</code>
       */
      public boolean hasFreeMoney() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       *减免金额
       * </pre>
       *
       * <code>required int32 freeMoney = 16;</code>
       */
      public int getFreeMoney() {
        return freeMoney_;
      }
      /**
       * <pre>
       *减免金额
       * </pre>
       *
       * <code>required int32 freeMoney = 16;</code>
       */
      public Builder setFreeMoney(int value) {
        bitField0_ |= 0x00008000;
        freeMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *减免金额
       * </pre>
       *
       * <code>required int32 freeMoney = 16;</code>
       */
      public Builder clearFreeMoney() {
        bitField0_ = (bitField0_ & ~0x00008000);
        freeMoney_ = 0;
        onChanged();
        return this;
      }

      private int emtySpace_ ;
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emtySpace = 17;</code>
       */
      public boolean hasEmtySpace() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emtySpace = 17;</code>
       */
      public int getEmtySpace() {
        return emtySpace_;
      }
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emtySpace = 17;</code>
       */
      public Builder setEmtySpace(int value) {
        bitField0_ |= 0x00010000;
        emtySpace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *空车位数
       * </pre>
       *
       * <code>required int32 emtySpace = 17;</code>
       */
      public Builder clearEmtySpace() {
        bitField0_ = (bitField0_ & ~0x00010000);
        emtySpace_ = 0;
        onChanged();
        return this;
      }

      private int totalSpace_ ;
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalSpace = 18;</code>
       */
      public boolean hasTotalSpace() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalSpace = 18;</code>
       */
      public int getTotalSpace() {
        return totalSpace_;
      }
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalSpace = 18;</code>
       */
      public Builder setTotalSpace(int value) {
        bitField0_ |= 0x00020000;
        totalSpace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *总车位数
       * </pre>
       *
       * <code>required int32 totalSpace = 18;</code>
       */
      public Builder clearTotalSpace() {
        bitField0_ = (bitField0_ & ~0x00020000);
        totalSpace_ = 0;
        onChanged();
        return this;
      }

      private int openType_ ;
      /**
       * <pre>
       *放行方式
       * </pre>
       *
       * <code>required int32 openType = 19;</code>
       */
      public boolean hasOpenType() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <pre>
       *放行方式
       * </pre>
       *
       * <code>required int32 openType = 19;</code>
       */
      public int getOpenType() {
        return openType_;
      }
      /**
       * <pre>
       *放行方式
       * </pre>
       *
       * <code>required int32 openType = 19;</code>
       */
      public Builder setOpenType(int value) {
        bitField0_ |= 0x00040000;
        openType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *放行方式
       * </pre>
       *
       * <code>required int32 openType = 19;</code>
       */
      public Builder clearOpenType() {
        bitField0_ = (bitField0_ & ~0x00040000);
        openType_ = 0;
        onChanged();
        return this;
      }

      private Object openSerial_ = "";
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>optional string openSerial = 20;</code>
       */
      public boolean hasOpenSerial() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>optional string openSerial = 20;</code>
       */
      public String getOpenSerial() {
        Object ref = openSerial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            openSerial_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>optional string openSerial = 20;</code>
       */
      public com.google.protobuf.ByteString
          getOpenSerialBytes() {
        Object ref = openSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          openSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>optional string openSerial = 20;</code>
       */
      public Builder setOpenSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        openSerial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>optional string openSerial = 20;</code>
       */
      public Builder clearOpenSerial() {
        bitField0_ = (bitField0_ & ~0x00080000);
        openSerial_ = getDefaultInstance().getOpenSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开闸放行流水(2和3有效)
       * </pre>
       *
       * <code>optional string openSerial = 20;</code>
       */
      public Builder setOpenSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        openSerial_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:A111)
    }

    // @@protoc_insertion_point(class_scope:A111)
    private static final A111 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new A111();
    }

    public static A111 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<A111>
        PARSER = new com.google.protobuf.AbstractParser<A111>() {
      public A111 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new A111(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<A111> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<A111> getParserForType() {
      return PARSER;
    }

    public A111 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface B111OrBuilder extends
      // @@protoc_insertion_point(interface_extends:B111)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *核心业务指令-出场汇报指令-应答对象
   * </pre>
   *
   * Protobuf type {@code B111}
   */
  public  static final class B111 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:B111)
      B111OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use B111.newBuilder() to construct.
    private B111(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private B111() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private B111(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BaseData11.internal_static_B111_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BaseData11.internal_static_B111_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              B111.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof B111)) {
        return super.equals(obj);
      }
      B111 other = (B111) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static B111 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static B111 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static B111 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static B111 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static B111 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static B111 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static B111 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static B111 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static B111 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static B111 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static B111 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static B111 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(B111 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *核心业务指令-出场汇报指令-应答对象
     * </pre>
     *
     * Protobuf type {@code B111}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:B111)
        B111OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BaseData11.internal_static_B111_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BaseData11.internal_static_B111_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                B111.class, Builder.class);
      }

      // Construct using com.common.model.protobuf.BaseData11.B111.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BaseData11.internal_static_B111_descriptor;
      }

      public B111 getDefaultInstanceForType() {
        return B111.getDefaultInstance();
      }

      public B111 build() {
        B111 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public B111 buildPartial() {
        B111 result = new B111(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof B111) {
          return mergeFrom((B111)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(B111 other) {
        if (other == B111.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        B111 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (B111) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:B111)
    }

    // @@protoc_insertion_point(class_scope:B111)
    private static final B111 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new B111();
    }

    public static B111 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<B111>
        PARSER = new com.google.protobuf.AbstractParser<B111>() {
      public B111 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new B111(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<B111> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<B111> getParserForType() {
      return PARSER;
    }

    public B111 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_A111_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_A111_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_B111_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_B111_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020BaseData11.proto\"\356\002\n\004A111\022\020\n\010inSerial\030" +
      "\001 \002(\t\022\021\n\toutSerial\030\002 \002(\t\022\021\n\tparkingId\030\003 " +
      "\002(\005\022\r\n\005wayNo\030\004 \002(\005\022\017\n\007wayName\030\005 \002(\t\022\017\n\007l" +
      "icense\030\006 \002(\t\022\016\n\006inTime\030\007 \002(\t\022\017\n\007outTime\030" +
      "\010 \002(\t\022\020\n\010carClass\030\t \002(\005\022\017\n\007carType\030\n \002(\005" +
      "\022\021\n\tpayStatus\030\013 \002(\005\022\021\n\tshoulePay\030\014 \002(\005\022\017" +
      "\n\007realPay\030\r \002(\005\022\017\n\007cashPay\030\016 \002(\005\022\021\n\tonli" +
      "nePay\030\017 \002(\005\022\021\n\tfreeMoney\030\020 \002(\005\022\021\n\temtySp" +
      "ace\030\021 \002(\005\022\022\n\ntotalSpace\030\022 \002(\005\022\020\n\010openTyp" +
      "e\030\023 \002(\005\022\022\n\nopenSerial\030\024 \001(\t\"\006\n\004B111B\'\n\031c" +
      "om.common.model.protobufB\nBaseData11"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_A111_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_A111_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_A111_descriptor,
        new String[] { "InSerial", "OutSerial", "ParkingId", "WayNo", "WayName", "License", "InTime", "OutTime", "CarClass", "CarType", "PayStatus", "ShoulePay", "RealPay", "CashPay", "OnlinePay", "FreeMoney", "EmtySpace", "TotalSpace", "OpenType", "OpenSerial", });
    internal_static_B111_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_B111_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_B111_descriptor,
        new String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
